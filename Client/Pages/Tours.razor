@page "/"
@page "/tours"
@attribute [StreamRendering(true)]
@inject ToursPageViewModel ToursVM
@inject NavigationManager NavManager
@using Client.Components
@using Client.Pages;
@using Client.ViewModels
@inject IJSRuntime JS


<PageTitle>Tours</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
   
    <PageHeader Icon="map"><span>Tours</span></PageHeader>

    <ButtonGroup Layout="ButtonGroup.Position.Center">
        <Button Img="log" Label="Report" OnClickCallback="ToursVM.DownloadReportAsync"></Button>
        <Button Img="map" Label="Add Tour" OnClickCallback="AddTour"></Button>
    </ButtonGroup>
    
</div>
@if (ToursVM.Tours == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ToursTable Tours="ToursVM.Tours"></ToursTable>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        ToursVM.InitializeAsync(StateHasChanged);
        await ToursVM.GetToursAsync();
        await JS.InvokeVoidAsync("adjustTableCellOverflow");

    }

    private void AddTour()
    {
        NavManager.NavigateTo("/new");
    }

    private void EditTour(int tourId)
    {
        NavManager.NavigateTo($"/tour/{tourId}");
    }

    private void TourDetails(string tourId)
    {
        Console.WriteLine($"TOUR ID: {tourId}");
        NavManager.NavigateTo($"/tours/{tourId}");
    }
}
