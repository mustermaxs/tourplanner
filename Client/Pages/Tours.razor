@page "/tours"
@attribute [StreamRendering]
@inject ToursViewModel ToursVM
@inject NavigationManager NavManager

<PageTitle>Tours</PageTitle>

<h1>Tours</h1>

<button class="btn btn-primary float-right" @onclick="AddTour">
    + Add Tour
</button>
@if (ToursVM.Tours == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Transport Type</th>
            <th>From</th>
            <th>To</th>
            <th>Rating</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tour in ToursVM.Tours)
            {
                <tr>
                    <td>@tour.Name</td>
                    <td>@tour.Description</td>
                    <td>@tour.TransportType</td>
                    <td>@tour.From</td>
                    <td>@tour.To</td>
                    <td>@tour.Rating</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditTour(tour.Id)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ToursVM.InitializeAsync();
    }

    private void AddTour()
    {
        NavManager.NavigateTo("/new");
    }

    private void EditTour(int tourId)
    {
        NavManager.NavigateTo($"/tour/{tourId}");
    }
}
