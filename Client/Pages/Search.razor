@page "/search"
@attribute [StreamRendering]
@inject SearchViewModel SearchVM
@inject NavigationManager NavManager

<PageTitle>Search Results</PageTitle>

<h1>Search Results:</h1>

<!-- Tours Table -->
<h2>Tours</h2>
@if (SearchVM.TourResults == null)
{
    <p><em>Enter a search term for tours and click Search.</em></p>
}
else if (SearchVM.TourResults.Count == 0)
{
    <p>No tour results found.</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Transport Type</th>
                    <th>From</th>
                    <th>To</th>
                    <th>Popularity</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tour in SearchVM.TourResults)
                {
                    <tr>
                        <td>@tour.Name</td>
                        <td>@tour.Description</td>
                        <td>@tour.TransportType</td>
                        <td>@tour.From</td>
                        <td>@tour.To</td>
                        <td>@tour.Popularity</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- TourLogs Table -->
<h2>Tour Logs</h2>
@if (SearchVM.TourLogResults == null)
{
    <p><em>Enter a search term for tour logs and click Search.</em></p>
}
else if (SearchVM.TourLogResults.Count == 0)
{
    <p>No tour log results found.</p>
}
else
{

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Log ID</th>
                    <th>Date</th>
                    <th>Comment</th>
                    <th>Difficulty</th>
                    <th>Duration</th>
                    <th>Rating</th>
                    <th>Tour</th>                   
                </tr>
            </thead>
            <tbody>
                @foreach (var log in SearchVM.TourLogResults)
                {
                    <tr>
                        <td>@log.Id</td>
                        <td>@log.Date</td>
                        <td>@log.Comment</td>
                        <td>@log.Difficulty</td>
                        <td>@log.Duration</td>
                        <td>@log.Rating</td>
                        <td>@log.Tour.Name</td>                        
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private string searchQuery;

    protected override async Task OnInitializedAsync()
    {
    
        await SearchVM.SearchTours(searchQuery); // Assume this also initializes the TourLogs search
    }
}
