@page "/tours/{TourId}"

@inject NavigationManager NavManager
@inject TourDetailsPageViewModel TourVM
@using Client.Components

<PageTitle>@TourVM.Tour.Name</PageTitle>

@if (TourVM.Tour == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="tour-header">
        <div class="d-flex justify-content-between align-items-center mb-4">

            <PageHeader Icon="route">@TourVM.Tour.Name</PageHeader>
            <div>
                <button class="btn btn-danger" @onclick="DeleteTour">
                    Delete
                </button>
                <button class="btn btn-primary" @onclick="EditTour">
                    Edit
                </button>
            </div>
        </div>
        <hr>
        @* Description *@
        <p>@TourVM.Tour.Description</p>
    </div>


<table class="table tour-table">
    <tbody>
    <tr>
        <td class="icon-td">
            <div style="width: 1.7rem">
                <div class="icon-wrapper">
                    <Icon Img="duration" AltText="#duration"></Icon>
                </div>
            </div>
        </td>
        <td>Est. time</td>
        <td>@FormatEstimatedTime(TourVM.Tour.EstimatedTime) h</td>
    </tr>
    <tr>
        <td class="icon-td">
            <div style="width: 1.7rem">
                <div class="icon-wrapper">
                    <Icon Img="map"></Icon>
                </div>
            </div>
        </td>
        <td>From</td>
        <td>@TourVM.Tour.From</td>
    </tr>
    <tr>
        <td class="icon-td">
            <div style="width: 1.7rem">
                <div class="icon-wrapper">
                   <Icon Img="to" AltText="#destination"></Icon>
                </div>
            </div>
        </td>
        <td>To</td>
        <td>@TourVM.Tour.To</td>
    </tr>
    <tr>
        <td class="icon-td">
            <div style="width: 1.7rem">
                <div class="icon-wrapper">
                    <Icon Img="difficulty" AltText="#difficulty"></Icon>
                </div>
            </div>
        </td>
        <td>Difficulty</td>
        <td>8/10</td>
    </tr>
    <tr>
        <td class="icon-td">
            <div style="width: 1.7rem">
                <div class="icon-wrapper">
                    <Icon Img="childfriendliness" AltText="#baby"></Icon>
                </div>
            </div>
        </td>
        <td>Childfriendliness</td>
        <td>
            <div class="progress" style="position: relative;">
                <div class="progress-bar" role="progressbar" style="width: @(Math.Ceiling(TourVM.Tour.ChildFriendliness) * 10)%"
                     aria-valuenow="@Math.Ceiling(TourVM.Tour.ChildFriendliness)" aria-valuemin="0" aria-valuemax="10">
                </div>
                <div class="progress-text" style="color: @(TourVM.Tour.ChildFriendliness < 5 ? "black" : "white; text-shadow:0px 0px 3px black"); position: absolute; top: 0; left: 0; width: 100%; text-align: center;">@Math.Ceiling(TourVM.Tour.ChildFriendliness) / 10</div>
            </div>
        </td>
    </tr>
    <tr>
        <td class="icon-td">
            <div style="width: 1.7rem">
                <div class="icon-wrapper">
                    <Icon Img="rating" AltText="<3"></Icon>
                </div>
            </div>
        </td>
        <td>Popularity</td>
        <td>
            <div class="progress" style="position: relative;">
                <div class="progress-bar" role="progressbar" style="width: @(Math.Ceiling(TourVM.Tour.Popularity) * 10)%"
                     aria-valuenow="@Math.Ceiling(TourVM.Tour.Popularity)" aria-valuemin="0" aria-valuemax="10">
                </div>
                <div class="progress-text" style="color: @(TourVM.Tour.ChildFriendliness < 5 ? "black" : "white; text-shadow:0px 0px 3px black"); position: absolute; top: 0; left: 0; width: 100%; text-align: center;">@Math.Ceiling(TourVM.Tour.Popularity) / 10</div>
            </div>
        </td>
    </tr>
    </tbody>
</table>

    @* Image *@
    <div class="tour-map">
        <img src="map.png" alt="Map">
    </div>
    <ButtonGroup Layout="ButtonGroup.Position.Center">
        <Button Img="log" OnClickCallback="@AddLog" Label="Add Log"></Button>
    </ButtonGroup>
    
    <div class="d-flex justify-content-between align-items-center">
        <h2>Logs</h2>
        
    </div>
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Date</th>
            <th>Comment</th>
            <th>Difficulty</th>
            <th>Duration (hrs)</th>
            <th>Rating</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var log in TourVM.TourLogs)
        {
            <tr>
                <a href="/tours/@TourId/log/@log.Id">
                    <td>@log.DateTime.ToString("yyyy-MM-dd")</td>
                </a>
                <td>@log.Comment</td>
                <td>@log.Difficulty</td>
                <td>@log.Duration</td>
                <td>@log.Rating</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter] public string? TourId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(TourId);
        await TourVM.InitializeAsync(Convert.ToInt32(TourId));
        StateHasChanged();
    }

    private void EditTour()
    {
        NavManager.NavigateTo($"/edit/{TourId}");
    }

    private void AddLog()
    {
        NavManager.NavigateTo($"/tour/{TourId}/add-log");
    }

    private async void DeleteTour()
    {
        await TourVM.DeleteTour();
        NavManager.NavigateTo("/tours");
    }

    private string FormatEstimatedTime(double minutes) // TODO ins ViewModel geben
    {
        double hours = minutes / 60;
        if (hours % 1 == 0)
        {
            return $"{hours:0}";
        }
        else if ((hours * 10) % 10 == 5)
        {
            return $"{hours:0.0}";
        }
        else
        {
            return $"{hours:0.00}";
        }
    }

}