@page "/new"
@attribute [StreamRendering]
@inject TourAddPageViewModel AddTourVM
@using Client.Components
@using Client.Models
@using Client.ViewModels

<PageTitle>Add Tour</PageTitle>
<div class="mb-4">
    <PageHeader Icon="route">Add Tour</PageHeader>
</div>
<div class="form-group mt-3">
    <div class="row">
        @* Tour name *@
        <div class="col">
            <label for="name">Name</label>
            <input aria-invalid="True" type="text" class="form-control" id="name" placeholder="Enter name" @bind="AddTourVM.Tour.Name">
        </div>
        @* Transport Type *@
        <div class="col">
            <label for="transporttype">Transport Type</label>
            <select class="form-control" id="transporttype" @bind="AddTourVM.Tour.TransportType">
                @foreach (var type in Enum.GetValues<TransportType>())
                {
                    <option value="@type">@type</option>
                }
            </select>
        </div>

    </div>
</div>

<div class="form-group mt-3">
    <div class="row">
        @* From *@
        <div class="col">
            <AutoComplete
                OnInput="async (val) => { await AddTourVM.GetSuggestion(val); AddTourVM.Tour.From = val; }"
                Options="() => AddTourVM.Suggestions ?? new List<string>()"
                Label="Enter starting location" Id="from">
            </AutoComplete>
        </div>
        @* To *@
        <div class="col">
            <AutoComplete
                OnInput="async (val) => { await AddTourVM.GetSuggestion(val); AddTourVM.Tour.To = val; }"
                Options="() => AddTourVM.Suggestions ?? new List<string>()"
                Label="Enter destination" Id="to">
            </AutoComplete>
        </div>
    </div>
</div>

@* Description *@
<div class="form-group mt-3">
    <label for="description">Description</label>
    <textarea class="form-control" id="description" placeholder="Enter description"
            @bind="AddTourVM.Tour.Description"></textarea>
</div>

<ButtonGroup Layout="ButtonGroup.Position.Center">
    <Button ButtonType="Primary" mt="4" Label="Add" Img="map" OnClickCallback="AddTourVM.AddTour"/>
</ButtonGroup>


@code
{
    public ElementReference FromInput;
    public ElementReference FromInputDataList;

    protected override async Task OnInitializedAsync()
    {
        await AddTourVM.InitializeAsync(StateHasChanged);
    }
}