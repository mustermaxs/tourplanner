// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tourplanner;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(TourContext))]
    [Migration("20240510171540_ChangeDefaultValues")]
    partial class ChangeDefaultValues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tourplanner.Entities.Tour.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TourId"));

                    b.Property<float>("ChildFriendliness")
                        .HasPrecision(5, 3)
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<float>("Distance")
                        .HasPrecision(10, 3)
                        .HasColumnType("real");

                    b.Property<TimeSpan>("EstimatedTime")
                        .HasColumnType("interval");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<float>("Popularity")
                        .HasPrecision(5, 4)
                        .HasColumnType("real");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("TransportType")
                        .HasColumnType("integer");

                    b.HasKey("TourId");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            TourId = 1,
                            ChildFriendliness = 4f,
                            Description = "This is an example tour 1.",
                            Distance = 100f,
                            EstimatedTime = new TimeSpan(0, 2, 0, 0, 0),
                            From = "Origin 1",
                            ImagePath = "example1.jpg",
                            Name = "Example Tour 1",
                            Popularity = 4.5f,
                            To = "Destination 1",
                            TransportType = 1
                        });
                });

            modelBuilder.Entity("Tourplanner.Entities.TourLog.TourLog", b =>
                {
                    b.Property<int>("TourLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TourLogId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<float>("Difficulty")
                        .HasColumnType("real");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("TourId")
                        .HasColumnType("integer");

                    b.HasKey("TourLogId");

                    b.HasIndex("TourId");

                    b.ToTable("TourLogs");

                    b.HasData(
                        new
                        {
                            TourLogId = 1,
                            Comment = "This was a great tour!",
                            Difficulty = 3.5f,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Rating = 4f,
                            TourId = 1
                        });
                });

            modelBuilder.Entity("Tourplanner.Entities.TourLog.TourLog", b =>
                {
                    b.HasOne("Tourplanner.Entities.Tour.Tour", "Tour")
                        .WithMany("TourLogs")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Tourplanner.Entities.Tour.Tour", b =>
                {
                    b.Navigation("TourLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
